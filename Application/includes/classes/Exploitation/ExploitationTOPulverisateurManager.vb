Imports System.Collections.Generic

Public Class ExploitationTOPulverisateurManager

#Region "Methodes Web Service"

    Public Shared Function getWSExploitationTOPulverisateurById(ByVal exploitationtopulverisateur_id As String) As ExploitationTOPulverisateur
        Dim objExploitationTOPulverisateur As New ExploitationTOPulverisateur
        Try

            ' déclarations
            Dim objWSCrodip As WSCrodip_prod.CrodipServer = WSCrodip.getWS()
            Dim objWSCrodip_response As new Object
            ' Appel au WS
            Dim codeResponse As Integer = objWSCrodip.GetExploitationTOPulverisateur(agentCourant.id, exploitationtopulverisateur_id, objWSCrodip_response)
            Select Case codeResponse
                Case 0 ' OK
                    ' construction de l'objet
                    Dim objWSCrodip_responseItem As System.Xml.XmlNode
                    For Each objWSCrodip_responseItem In objWSCrodip_response
                        Select Case objWSCrodip_responseItem.Name()
                            Case "id"
                                If objWSCrodip_responseItem.InnerText() <> "" Then
                                    objExploitationTOPulverisateur.id = CType(objWSCrodip_responseItem.InnerText(), String)
                                End If
                            Case "idPulverisateur"
                                If objWSCrodip_responseItem.InnerText() <> "" Then
                                    objExploitationTOPulverisateur.idPulverisateur = CType(objWSCrodip_responseItem.InnerText(), String)
                                End If
                            Case "idExploitation"
                                If objWSCrodip_responseItem.InnerText() <> "" Then
                                    objExploitationTOPulverisateur.idExploitation = CType(objWSCrodip_responseItem.InnerText(), String)
                                End If
                            Case "dateModificationCrodip"
                                If objWSCrodip_responseItem.InnerText() <> "" Then
                                    objExploitationTOPulverisateur.dateModificationCrodip = CType(objWSCrodip_responseItem.InnerText(), String)
                                End If
                            Case "dateModificationAgent"
                                If objWSCrodip_responseItem.InnerText() <> "" Then
                                    objExploitationTOPulverisateur.dateModificationAgent = CType(objWSCrodip_responseItem.InnerText(), String)
                                End If
                        End Select
                    Next
                Case 1 ' NOK
                    CSDebug.dispError("ExploitationTOPulverisateurManager - Code 1 : Non-Trouvée")
                Case 9 ' BADREQUEST
                    CSDebug.dispError("ExploitationTOPulverisateurManager - Code 9 : Bad Request")
            End Select
        Catch ex As Exception
            CSDebug.dispError("ExploitationTOPulverisateurManager - getWSExploitationTOPulverisateurById : " & ex.Message)
        End Try
        Return objExploitationTOPulverisateur

    End Function


    Public Shared Function sendWSExploitationTOPulverisateur(pAgent As Agent, ByVal exploitationtopulverisateur As ExploitationTOPulverisateur, ByRef updatedObject As Object) As Integer
        Try
            ' Appel au Web Service
            Dim objWSCrodip As WSCrodip_prod.CrodipServer = WSCrodip.getWS()
            Return objWSCrodip.SendExploitationTOPulverisateur(pAgent.id, exploitationtopulverisateur, updatedObject)
        Catch ex As Exception
            Return -1
        End Try
    End Function

    Public Shared Function xml2object(ByVal arrXml As Object) As ExploitationTOPulverisateur
        Dim objExploitationTOPulverisateur As New ExploitationTOPulverisateur

        For Each tmpSerializeItem As System.Xml.XmlElement In arrXml
            Select Case tmpSerializeItem.LocalName()
                Case "id"
                    objExploitationTOPulverisateur.id = CType(tmpSerializeItem.InnerText, String)
                Case "idPulverisateur"
                    objExploitationTOPulverisateur.idPulverisateur = CType(tmpSerializeItem.InnerText, String)
                Case "idExploitation"
                    objExploitationTOPulverisateur.idExploitation = CType(tmpSerializeItem.InnerText, String)
                Case "dateModificationCrodip"
                    objExploitationTOPulverisateur.dateModificationCrodip = CSDate.ToCRODIPString(CType(tmpSerializeItem.InnerText, String))
                Case "dateModificationAgent"
                    objExploitationTOPulverisateur.dateModificationAgent = CSDate.ToCRODIPString(CType(tmpSerializeItem.InnerText, String))
            End Select
        Next

        Return objExploitationTOPulverisateur
    End Function

#End Region

#Region "Methodes Locales"
    ''' <summary>
    ''' rend un nouvel Id pour la relation ExploitationPulverisateur
    ''' </summary>
    ''' <param name="curAgent"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Shared Function getNewId(ByVal curAgent As Agent) As String
        Debug.Assert(Not curAgent Is Nothing)
        Debug.Assert(Not curAgent.numeroNational Is Nothing)
        ' déclarations
        Dim strExpl2PulvId As String = ""
        Dim oCsdb As CSDb = Nothing
        If Not curAgent.numeroNational Is Nothing Then
            oCSDB = New CSDb(True)
            Dim bddCommande As OleDb.OleDbCommand
            bddCommande = oCSDB.getConnection().CreateCommand()
            bddCommande.CommandText = "SELECT `ExploitationTOPulverisateur`.`id` FROM `ExploitationTOPulverisateur` WHERE `ExploitationTOPulverisateur`.`id` LIKE '" & curAgent.idStructure & "-" & curAgent.id & "-%' ORDER BY `ExploitationTOPulverisateur`.`id` DESC"
            Try
                ' On récupère les résultats
                Dim tmpListProfils As System.Data.OleDb.OleDbDataReader = bddCommande.ExecuteReader
                ' Puis on les parcours
                Dim newId As Integer = 0
                While tmpListProfils.Read()
                    ' On récupère le dernier ID
                    Dim tmpIdInt As Integer
                    strExpl2PulvId = tmpListProfils.Item(0).ToString
                    tmpIdInt = CInt(strExpl2PulvId.Replace(curAgent.idStructure & "-" & curAgent.id & "-", ""))
                    If tmpIdInt > newId Then
                        newId = tmpIdInt
                    End If
                End While
                strExpl2PulvId = curAgent.idStructure & "-" & curAgent.id & "-" & (newId + 1)
            Catch ex As Exception ' On intercepte l'erreur
                CSDebug.dispFatal("PulverisateurManager - getNewShareId : " & ex.Message)
            End Try

            ' Test pour fermeture de connection BDD
            If Not oCSDB Is Nothing Then
                ' On ferme la connexion
                oCSDB.free()
            End If


        End If
        If strExpl2PulvId Is Nothing Or strExpl2PulvId = "" Then
            strExpl2PulvId = curAgent.idStructure & "-" & curAgent.id & "-1"
        End If
        'on retourne le nouvel id
        Return strExpl2PulvId
    End Function

    ''' <summary>
    ''' Sauvegarde de la relation exploitation pulverisateur
    ''' </summary>
    ''' <param name="strExploitationId"></param>
    ''' <param name="strPulverisateurId"></param>
    ''' <remarks></remarks>
    'Public Shared Sub save(strExploitationId As String, strPulverisateurId As String)

    '    Try
    '        Dim oExploit2Pulve As ExploitationTOPulverisateur = getExploitationTOPulverisateurByExploitIdAndPulverisateurId(strExploitationId, strPulverisateurId)

    '        If oExploit2Pulve.id <> "" Then
    '            'il n'y a pas de relation entre l'exploitation et le pulverisateur
    '            createExploitationTOPulverisateur(objExploitationTOPulverisateur.id)
    '        End If
    '        Dim oCSDb As New CSDb(True)

    '        Dim bddCommande As OleDb.OleDbCommand
    '        bddCommande = oCSDb.getConnection().CreateCommand()

    '        ' Initialisation de la requete
    '        Dim paramsQuery As String = "`ExploitationTOPulverisateur`.`id`='" & objExploitationTOPulverisateur.id & "'"

    '        ' Mise a jour de la date de derniere modification
    '        If objExploitationTOPulverisateur.dateModificationAgent <> objExploitationTOPulverisateur.dateModificationCrodip Or String.IsNullOrEmpty(objExploitationTOPulverisateur.dateModificationAgent) Then
    '            objExploitationTOPulverisateur.dateModificationAgent = CSDate.access2mysql(Date.Now).ToString
    '        End If

    '        If Not objExploitationTOPulverisateur.idPulverisateur Is Nothing Then
    '            paramsQuery = paramsQuery & " , `ExploitationTOPulverisateur`.`idPulverisateur`='" & CSDb.secureString(objExploitationTOPulverisateur.idPulverisateur) & "'"
    '        End If
    '        If Not objExploitationTOPulverisateur.idExploitation Is Nothing Then
    '            paramsQuery = paramsQuery & " , `ExploitationTOPulverisateur`.`idExploitation`='" & CSDb.secureString(objExploitationTOPulverisateur.idExploitation) & "'"
    '        End If
    '        If Not objExploitationTOPulverisateur.dateModificationCrodip Is Nothing Then
    '            paramsQuery = paramsQuery & " , `ExploitationTOPulverisateur`.`dateModificationCrodip`='" & CSDate.mysql2access(objExploitationTOPulverisateur.dateModificationCrodip) & "'"
    '        End If
    '        If Not objExploitationTOPulverisateur.dateModificationAgent Is Nothing Then
    '            paramsQuery = paramsQuery & " , `ExploitationTOPulverisateur`.`dateModificationAgent`='" & CSDate.mysql2access(objExploitationTOPulverisateur.dateModificationAgent) & "'"
    '        End If

    '        ' On finalise la requete et en l'execute
    '        bddCommande.CommandText = "UPDATE `ExploitationTOPulverisateur` SET " & paramsQuery & " WHERE `ExploitationTOPulverisateur`.`id`='" & objExploitationTOPulverisateur.id & "'"
    '        bddCommande.ExecuteNonQuery()
    '        ' Test pour fermeture de connection BDD
    '        If oCSDb IsNot Nothing Then
    '            ' On ferme la connexion
    '            oCSDb.free()
    '        End If
    '        Else
    '        CSDebug.dispError("ExploitationToPulverisateur.Save ERR id est vide")
    '        End If
    '    Catch ex As Exception
    '        CSDebug.dispFatal("ExploitationToPulverisateur.Save ERROR : " & ex.Message)
    '    End Try

    'End Sub

    Public Shared Function save(ByVal objExploitationTOPulverisateur As ExploitationTOPulverisateur, pAgent As Agent, Optional bSyncro As Boolean = False) As Boolean
        Dim bReturn As Boolean
        Try
            If objExploitationTOPulverisateur.id <> "" Then

                Dim oCSDb As New CSDb(True)

                Dim bddCommande As OleDb.OleDbCommand
                bddCommande = oCSDb.getConnection().CreateCommand()

                ' On test si le ExploitationTOPulverisateur existe ou non
                Dim existsExploitationTOPulverisateur As Object
                existsExploitationTOPulverisateur = ExploitationTOPulverisateurManager.getExploitationTOPulverisateurById(objExploitationTOPulverisateur.id)
                If existsExploitationTOPulverisateur.id = "" Then
                    ' Si il n'existe pas, on le crée
                    If objExploitationTOPulverisateur.id = "" Then
                        objExploitationTOPulverisateur.id = ExploitationTOPulverisateurManager.getNewId(pAgent)
                    End If
                    bddCommande.CommandText = "INSERT INTO `ExploitationTOPulverisateur` (`id`,`dateModificationAgent`) VALUES ('" & objExploitationTOPulverisateur.id & "','" & CSDate.mysql2access(Date.Now) & "')"
                    bddCommande.ExecuteNonQuery()
                End If

                ' Initialisation de la requete
                Dim paramsQuery As String = "`ExploitationTOPulverisateur`.`id`='" & objExploitationTOPulverisateur.id & "'"

                ' Mise a jour de la date de derniere modification
                If Not bSyncro Then
                    objExploitationTOPulverisateur.dateModificationAgent = CSDate.ToCRODIPString(Date.Now).ToString
                End If

                If Not objExploitationTOPulverisateur.idPulverisateur Is Nothing Then
                    paramsQuery = paramsQuery & " , `ExploitationTOPulverisateur`.`idPulverisateur`='" & CSDb.secureString(objExploitationTOPulverisateur.idPulverisateur) & "'"
                End If
                If Not objExploitationTOPulverisateur.idExploitation Is Nothing Then
                    paramsQuery = paramsQuery & " , `ExploitationTOPulverisateur`.`idExploitation`='" & CSDb.secureString(objExploitationTOPulverisateur.idExploitation) & "'"
                End If
                If Not objExploitationTOPulverisateur.dateModificationCrodip Is Nothing Then
                    paramsQuery = paramsQuery & " , `ExploitationTOPulverisateur`.`dateModificationCrodip`='" & CSDate.mysql2access(objExploitationTOPulverisateur.dateModificationCrodip) & "'"
                End If
                If Not objExploitationTOPulverisateur.dateModificationAgent Is Nothing Then
                    paramsQuery = paramsQuery & " , `ExploitationTOPulverisateur`.`dateModificationAgent`='" & CSDate.mysql2access(objExploitationTOPulverisateur.dateModificationAgent) & "'"
                End If

                ' On finalise la requete et en l'execute
                bddCommande.CommandText = "UPDATE `ExploitationTOPulverisateur` SET " & paramsQuery & " WHERE `ExploitationTOPulverisateur`.`id`='" & objExploitationTOPulverisateur.id & "'"
                bddCommande.ExecuteNonQuery()
                ' Test pour fermeture de connection BDD
                If oCSDb IsNot Nothing Then
                    ' On ferme la connexion
                    oCSDb.free()
                End If
                bReturn = True
            Else
                CSDebug.dispError("ExploitationToPulverisateur.Save ERR id est vide")
                bReturn = False
            End If
        Catch ex As Exception
            CSDebug.dispFatal("ExploitationToPulverisateur.Save ERROR : " & ex.Message)
            bReturn = False
        End Try

        Return bReturn
    End Function
    Public Shared Function delete(pPulverisateurId As String, pExploitationId As String) As Boolean
        Dim bReturn As Boolean
        Try

            Dim oCSDb As New CSDb(True)

            Dim bddCommande As OleDb.OleDbCommand
            bddCommande = oCSDb.getConnection().CreateCommand()

            bddCommande.CommandText = "DELETE FROM ExploitationTOPulverisateur WHERE idPulveristaeur = '" & pPulverisateurId & "' and idExploitation = '" & pExploitationId & "'"
            bddCommande.ExecuteNonQuery()
            ' Test pour fermeture de connection BDD
            If oCSDb IsNot Nothing Then
                ' On ferme la connexion
                oCSDb.free()
            End If
            bReturn = True
        Catch ex As Exception
            CSDebug.dispFatal("ExploitationToPulverisateur.Save ERROR : " & ex.Message)
            bReturn = False
        End Try

        Return bReturn
    End Function

    Public Shared Sub setSynchro(ByVal objExploitationTOPulverisateur As ExploitationTOPulverisateur)
        Try
            Dim dbLink As New CSDb(True)
            Dim newDate As String = Date.Now.ToString
            dbLink.queryString = "UPDATE `ExploitationTOPulverisateur` SET `ExploitationTOPulverisateur`.`dateModificationCrodip`='" & newDate & "',`ExploitationTOPulverisateur`.`dateModificationAgent`='" & newDate & "' WHERE `ExploitationTOPulverisateur`.`id`='" & objExploitationTOPulverisateur.id & "'"
            dbLink.Execute()
            dbLink.free()
        Catch ex As Exception
            CSDebug.dispFatal("ExploitationTOPulverisateurManager::setSynchro : " & ex.Message)
        End Try
    End Sub

    Public Shared Function getExploitationTOPulverisateurById(ByVal exploitationtopulverisateur_id As String) As ExploitationTOPulverisateur
        ' déclarations
        Dim tmpExploitationTOPulverisateur As New ExploitationTOPulverisateur
        If exploitationtopulverisateur_id <> "" Then

            Dim bddCommande As OleDb.OleDbCommand
            Dim oCSdb As New CSDb(True)
            bddCommande = oCSdb.getConnection().CreateCommand()
            bddCommande.CommandText = "SELECT * FROM ExploitationTOPulverisateur WHERE ExploitationTOPulverisateur.id='" & exploitationtopulverisateur_id & "'"
            Try
                ' On récupère les résultats
                Dim tmpListProfils As System.Data.OleDb.OleDbDataReader = bddCommande.ExecuteReader
                ' Puis on les parcours
                While tmpListProfils.Read()
                    ' On rempli notre tableau
                    Dim tmpColId As Integer = 0
                    While tmpColId < tmpListProfils.FieldCount()
                        Select Case tmpListProfils.GetName(tmpColId)
                            Case "id"
                                tmpExploitationTOPulverisateur.id = tmpListProfils.Item(tmpColId).ToString()
                            Case "idPulverisateur"
                                tmpExploitationTOPulverisateur.idPulverisateur = tmpListProfils.Item(tmpColId).ToString()
                            Case "idExploitation"
                                tmpExploitationTOPulverisateur.idExploitation = tmpListProfils.Item(tmpColId).ToString()
                            Case "dateModificationCrodip"
                                tmpExploitationTOPulverisateur.dateModificationCrodip = CSDate.ToCRODIPString(tmpListProfils.Item(tmpColId).ToString())
                            Case "dateModificationAgent"
                                tmpExploitationTOPulverisateur.dateModificationAgent = CSDate.ToCRODIPString(tmpListProfils.Item(tmpColId).ToString())
                        End Select
                        tmpColId = tmpColId + 1
                    End While
                End While
            Catch ex As Exception ' On intercepte l'erreur
                CSDebug.dispFatal("ExploitationTOPulverisateurManager Error: " & ex.Message)
            End Try

            ' Test pour fermeture de connection BDD
            If oCSdb IsNot Nothing Then
                ' On ferme la connexion
                oCSdb.free()
            End If

        End If
        'on retourne le exploitationtopulverisateur ou un objet vide en cas d'erreur
        Return tmpExploitationTOPulverisateur
    End Function

    Public Shared Function getExploitationTOPulverisateurByExploitationId(ByVal pExploitationId As String) As List(Of ExploitationTOPulverisateur)
        ' déclarations
        Dim tmpExploitationTOPulverisateur As ExploitationTOPulverisateur
        Dim oLst As New List(Of ExploitationTOPulverisateur)
        Dim oCSDB As New CSDb(True)
        If pExploitationId <> "" Then

            Dim bddCommande As OleDb.OleDbCommand
            bddCommande = oCSDB.getConnection().CreateCommand()
            bddCommande.CommandText = "SELECT * FROM ExploitationTOPulverisateur WHERE ExploitationTOPulverisateur.idExploitation='" & pExploitationId & "'"
            Try
                ' On récupère les résultats
                Dim tmpListProfils As System.Data.OleDb.OleDbDataReader = bddCommande.ExecuteReader
                ' Puis on les parcours
                While tmpListProfils.Read()
                    ' On rempli notre tableau
                    tmpExploitationTOPulverisateur = New ExploitationTOPulverisateur()
                    Dim tmpColId As Integer = 0
                    While tmpColId < tmpListProfils.FieldCount()
                        Select Case tmpListProfils.GetName(tmpColId)
                            Case "id"
                                tmpExploitationTOPulverisateur.id = tmpListProfils.Item(tmpColId).ToString()
                            Case "idPulverisateur"
                                tmpExploitationTOPulverisateur.idPulverisateur = tmpListProfils.Item(tmpColId).ToString()
                            Case "idExploitation"
                                tmpExploitationTOPulverisateur.idExploitation = tmpListProfils.Item(tmpColId).ToString()
                            Case "dateModificationCrodip"
                                tmpExploitationTOPulverisateur.dateModificationCrodip = CSDate.ToCRODIPString(tmpListProfils.Item(tmpColId).ToString())
                            Case "dateModificationAgent"
                                tmpExploitationTOPulverisateur.dateModificationAgent = CSDate.ToCRODIPString(tmpListProfils.Item(tmpColId).ToString())
                        End Select
                        tmpColId = tmpColId + 1
                    End While
                    oLst.Add(tmpExploitationTOPulverisateur)
                End While
            Catch ex As Exception ' On intercepte l'erreur
                MsgBox("ExploitationTOPulverisateurManager Error: " & ex.Message)
            End Try

            ' Test pour fermeture de connection BDD
            If oCSDB IsNot Nothing Then
                ' On ferme la connexion
                oCSDB.free()
            End If

        End If
        'on retourne une liste de Exploitationtopulverisateur 
        Return oLst
    End Function

    Public Shared Function getExploitationTOPulverisateurByPulverisateurId(ByVal pPulveId As String) As ExploitationTOPulverisateur
        ' déclarations
        Dim tmpExploitationTOPulverisateur As ExploitationTOPulverisateur = Nothing
        Dim oCSDB As New CSDb(True)
        If pPulveId <> "" Then

            Dim bddCommande As OleDb.OleDbCommand
            bddCommande = oCSDB.getConnection().CreateCommand()
            bddCommande.CommandText = "SELECT * FROM ExploitationTOPulverisateur WHERE ExploitationTOPulverisateur.idPulverisateur='" & pPulveId & "'"
            Try
                ' On récupère les résultats
                Dim tmpListProfils As System.Data.OleDb.OleDbDataReader = bddCommande.ExecuteReader
                ' Puis on les parcours
                While tmpListProfils.Read()
                    ' On rempli notre tableau
                    tmpExploitationTOPulverisateur = New ExploitationTOPulverisateur()
                    Dim tmpColId As Integer = 0
                    While tmpColId < tmpListProfils.FieldCount()
                        Select Case tmpListProfils.GetName(tmpColId)
                            Case "id"
                                tmpExploitationTOPulverisateur.id = tmpListProfils.Item(tmpColId).ToString()
                            Case "idPulverisateur"
                                tmpExploitationTOPulverisateur.idPulverisateur = tmpListProfils.Item(tmpColId).ToString()
                            Case "idExploitation"
                                tmpExploitationTOPulverisateur.idExploitation = tmpListProfils.Item(tmpColId).ToString()
                            Case "dateModificationCrodip"
                                tmpExploitationTOPulverisateur.dateModificationCrodip = CSDate.ToCRODIPString(tmpListProfils.Item(tmpColId).ToString())
                            Case "dateModificationAgent"
                                tmpExploitationTOPulverisateur.dateModificationAgent = CSDate.ToCRODIPString(tmpListProfils.Item(tmpColId).ToString())
                        End Select
                        tmpColId = tmpColId + 1
                    End While
                End While
            Catch ex As Exception ' On intercepte l'erreur
                MsgBox("ExploitationTOPulverisateurManager Error: " & ex.Message)
            End Try

            ' Test pour fermeture de connection BDD
            If oCSDB IsNot Nothing Then
                ' On ferme la connexion
                oCSDB.free()
            End If

        End If
        'on retourne une instance de Exploitationtopulverisateur 
        Return tmpExploitationTOPulverisateur
    End Function
    ''' <summary>
    ''' Renvoie un lien en fonction de l'Id du pulve et l'Id de l'exploitation
    ''' </summary>
    ''' <param name="pExploitId"></param>
    ''' <param name="pPulveId"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Shared Function getExploitationTOPulverisateurByExploitIdAndPulverisateurId(pExploitId As String, ByVal pPulveId As String) As ExploitationTOPulverisateur
        ' déclarations
        Dim oReturn As New ExploitationTOPulverisateur()
        Dim oCSDB As New CSDb(True)
        If Not String.IsNullOrEmpty(pPulveId) And Not String.IsNullOrEmpty(pExploitId) Then

            Dim bddCommande As OleDb.OleDbCommand
            bddCommande = oCSDB.getConnection().CreateCommand()
            bddCommande.CommandText = "SELECT * FROM ExploitationTOPulverisateur WHERE ExploitationTOPulverisateur.idPulverisateur='" & pPulveId & "' and idExploitation = '" & pExploitId & "'"
            Try
                ' On récupère les résultats
                Dim oDR As System.Data.OleDb.OleDbDataReader = bddCommande.ExecuteReader
                ' Puis on les parcours
                While oDR.Read()
                    ' On rempli notre tableau
                    Dim tmpColId As Integer = 0
                    While tmpColId < oDR.FieldCount()
                        Select Case oDR.GetName(tmpColId).ToUpper().Trim()
                            Case "id".ToUpper().Trim()
                                oReturn.id = oDR.Item(tmpColId).ToString()
                            Case "idPulverisateur".ToUpper().Trim()
                                oReturn.idPulverisateur = oDR.Item(tmpColId).ToString()
                            Case "idExploitation".ToUpper().Trim()
                                oReturn.idExploitation = oDR.Item(tmpColId).ToString()
                            Case "dateModificationCrodip".ToUpper().Trim()
                                oReturn.dateModificationCrodip = CSDate.ToCRODIPString(oDR.Item(tmpColId).ToString())
                            Case "dateModificationAgent".ToUpper().Trim()
                                oReturn.dateModificationAgent = CSDate.ToCRODIPString(oDR.Item(tmpColId).ToString())
                        End Select
                        tmpColId = tmpColId + 1
                    End While
                End While
            Catch ex As Exception ' On intercepte l'erreur
                CSDebug.dispFatal("ExploitationTOPulverisateurManager Error: " & ex.Message)
            End Try

            ' Test pour fermeture de connection BDD
            If oCSDB IsNot Nothing Then
                ' On ferme la connexion
                oCSDB.free()
            End If

        End If
        'on retourne une instance de Exploitationtopulverisateur 
        Return oReturn
    End Function
    Public Shared Sub createExploitationTOPulverisateur(ByVal pExploitId As String, pPulveId As String, pAgent As Agent)
        Try
            Dim bddCommande As OleDb.OleDbCommand
            Dim oCSdb As New CSDb(True)
            bddCommande = oCSdb.getConnection().CreateCommand()
            'New ID
            If pExploitId <> "" And pPulveId <> "0" Then
                Dim idShare As String = ExploitationTOPulverisateurManager.getNewId(pagent)
                bddCommande.CommandText = "INSERT INTO `ExploitationTOPulverisateur` (`id`,`idPulverisateur`,`idExploitation`,`dateModificationAgent`) VALUES ('" & idShare & "','" & pPulveId & "','" & pExploitId & "','" & CSDate.mysql2access(Date.Now) & "')"
                bddCommande.ExecuteNonQuery()
            End If

            ' Test pour fermeture de connection BDD
            If oCSdb IsNot Nothing Then
                ' On ferme la connexion
                oCSdb.free()
            End If
        Catch ex As Exception
            CSDebug.dispFatal("ExploitationTOPulverisateurManager.createExploitationTOPulverisateur ERROR : " & ex.Message)
        End Try
    End Sub

    Public Shared Function getUpdates(ByVal agent As Agent) As ExploitationTOPulverisateur()
        ' déclarations
        Dim arrItems(0) As ExploitationTOPulverisateur
        Dim bddCommande As OleDb.OleDbCommand
        Dim oCSDb As New CSDb(True)

        bddCommande = oCSDb.getConnection().CreateCommand()
        bddCommande.CommandText = "SELECT ExploitationTOPulverisateur.* FROM ExploitationTOPulverisateur INNER JOIN Exploitation ON ExploitationTOPulverisateur.idExploitation = Exploitation.id WHERE ExploitationTOPulverisateur.dateModificationAgent<>ExploitationTOPulverisateur.dateModificationCrodip"
        bddCommande.CommandText = bddCommande.CommandText & " AND Exploitation.idStructure=" & agent.idStructure
        Try
            ' On récupère les résultats
            Dim tmpListProfils As System.Data.OleDb.OleDbDataReader = bddCommande.ExecuteReader
            Dim i As Integer = 0
            ' Puis on les parcours
            While tmpListProfils.Read()
                ' On rempli notre tableau
                Dim tmpExploitationTOPulverisateur As New ExploitationTOPulverisateur
                Dim tmpColId As Integer = 0
                While tmpColId < tmpListProfils.FieldCount()
                    Select Case tmpListProfils.GetName(tmpColId)
                        Case "id"
                            tmpExploitationTOPulverisateur.id = tmpListProfils.Item(tmpColId).ToString()
                        Case "idPulverisateur"
                            tmpExploitationTOPulverisateur.idPulverisateur = tmpListProfils.Item(tmpColId).ToString()
                        Case "idExploitation"
                            tmpExploitationTOPulverisateur.idExploitation = tmpListProfils.Item(tmpColId).ToString()
                        Case "dateModificationCrodip"
                            tmpExploitationTOPulverisateur.dateModificationCrodip = CSDate.ToCRODIPString(tmpListProfils.Item(tmpColId).ToString())
                        Case "dateModificationAgent"
                            tmpExploitationTOPulverisateur.dateModificationAgent = CSDate.ToCRODIPString(tmpListProfils.Item(tmpColId).ToString())
                    End Select
                    tmpColId = tmpColId + 1
                End While
                arrItems(i) = tmpExploitationTOPulverisateur
                i = i + 1
                ReDim Preserve arrItems(i)
            End While
            ReDim Preserve arrItems(i - 1)

        Catch ex As Exception ' On intercepte l'erreur
            CSDebug.dispFatal("Erreur - ExploitationTOPulverisateurManager - getResult : " & ex.Message)
        End Try

        ' Test pour fermeture de connection BDD
        If oCSDb IsNot Nothing Then
            ' On ferme la connexion
            oCSDb.free()
        End If

        'on retourne les objet non synchro
        Return arrItems
    End Function

#End Region

End Class
Imports System.Collections.Generic
Imports System.Linq
Imports CRODIPWS

Public Class dlgGestionCoPro

    Private m_lstExploit2Pulve As List(Of ExploitationTOPulverisateur)
    Private m_oAgent As Agent
    Private m_oPulverisateur As Pulverisateur

    Public Sub New()

        ' Cet appel est requis par le concepteur.
        InitializeComponent()

        ' Ajoutez une initialisation quelconque après l'appel InitializeComponent().
    End Sub

    Public Sub Setcontext(pPulve As Pulverisateur, pAgent As Agent)
        m_oPulverisateur = pPulve
        m_lstExploit2Pulve = ExploitationTOPulverisateurManager.getListByPulverisateurId(m_oPulverisateur.id)
        m_lstExploit2Pulve.ForEach(Sub(oExploit)
                                       m_bsrcExploitant.Add(oExploit)
                                   End Sub)

        m_oAgent = pAgent

    End Sub
    Public Sub AjoutePropietaire(pExploit As Exploitation)
        Dim oExploit2Pulve As New ExploitationTOPulverisateur(pExploit, m_oPulverisateur)
        m_lstExploit2Pulve.Add(oExploit2Pulve)
        m_bsrcExploitant.Add(oExploit2Pulve)
        m_bsrcExploitant.ResetBindings(False)
        m_bsrcExploitant.MoveLast()
    End Sub

    Private Sub FrmAddCoProp_Load(sender As Object, e As EventArgs) Handles Me.Load
        'm_lstExploit2Pulve.ForEach(Sub(oExploit)
        '                               m_bsrcExploitant.Add(oExploit)
        '                           End Sub)
        'm_dgvCoProp.Rows(m_dgvCoProp.Rows.Count - 1).Selected = True
    End Sub

    Private Sub btnNewExploitant_Click(sender As Object, e As EventArgs) Handles btnNewExploitant.Click
        CreerExploitant()
    End Sub

    Private Sub CreerExploitant()
        Dim frm As New fiche_exploitant()
        Dim OExploit As New Exploitation()
        OExploit.raisonSociale = "Nouveau."
        frm.setContexte(False, OExploit, m_oAgent, Nothing)
        If frm.ShowDialog() = DialogResult.OK Then
            Dim oExploit2Pulve As New ExploitationTOPulverisateur(OExploit, m_oPulverisateur)
            m_lstExploit2Pulve.Add(oExploit2Pulve)
            m_bsrcExploitant.Add(oExploit2Pulve)
        End If
        frm.Close()
    End Sub

    Private Sub btnAjoutExploitant_Click(sender As Object, e As EventArgs) Handles btnAjoutExploitant.Click
        Dim ofrm As New dlgListExploitant()
        ofrm.SetContexte(m_oAgent)
        If ofrm.ShowDialog() = DialogResult.OK Then
            If m_lstExploit2Pulve.Where(Function(oExploit)
                                            Return oExploit.id = ofrm.oExploit.id
                                        End Function).Count() = 0 Then
                AjoutePropietaire(ofrm.oExploit)
            End If
        End If

    End Sub

    Private Sub btnSupprCoProp_Click(sender As Object, e As EventArgs) Handles btnSupprCoProp.Click
        SuppressionCoProp()
    End Sub

    Private Sub SuppressionCoProp()
        Dim oExploit2Pulve As ExploitationTOPulverisateur
        If m_bsrcExploitant.Current IsNot Nothing Then
            oExploit2Pulve = m_bsrcExploitant.Current
            oExploit2Pulve.isSupprimeCoProp = True
            If m_dgvCoProp.CurrentRow IsNot Nothing Then
                m_dgvCoProp.Rows.Remove(m_dgvCoProp.CurrentRow)
            End If
        End If
    End Sub
    Private Sub btnValider_Click(sender As Object, e As EventArgs) Handles btnValider.Click
        SauvegarderExploitToPulve()
        Me.DialogResult = DialogResult.OK
        Me.Close()
    End Sub
    Private Sub SauvegarderExploitToPulve()
        'Sauvegarde des Exploitants
        m_lstExploit2Pulve.ForEach(Sub(oExploit)
                                       ExploitationTOPulverisateurManager.save(oExploit, m_oAgent)
                                   End Sub)
    End Sub
    Public ReadOnly Property NbreExploitants() As Integer
        Get
            Return m_lstExploit2Pulve.Count()
        End Get
    End Property
End Class
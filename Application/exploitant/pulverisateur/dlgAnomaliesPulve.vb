Imports System.Windows.Forms
Imports CRODIPWS

Public Class dlgAnomaliesPulve

    Private m_pulve As Pulverisateur
    Public Sub setContexte(pPulve As Pulverisateur)
        m_pulve = pPulve
        Dim obList As New SortableBindingList(Of Anomalie)
        obList.AddList(m_pulve.lstAnomalie)
        mbs_Annomalies.DataSource = obList

    End Sub

    Private Sub OK_Button_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OK_Button.Click
        Me.DialogResult = System.Windows.Forms.DialogResult.OK
        Me.Close()
    End Sub

    Private Sub Cancel_Button_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Cancel_Button.Click
        Me.DialogResult = System.Windows.Forms.DialogResult.Cancel
        Me.Close()
    End Sub

    Private Sub ckValeurAgentTous_CheckedChanged(sender As Object, e As EventArgs) Handles ckValeurAgentTous.CheckedChanged
        If ckValeurAgentTous.Checked Then
            For Each oAno As Anomalie In m_pulve.lstAnomalie
                oAno.bValeurAgentOK = True
            Next
            ckValeurAgentTous.Checked = False
            mbs_Annomalies.ResetBindings(False)
        End If

    End Sub

    Private Sub ckValeurOTCTous_CheckedChanged(sender As Object, e As EventArgs) Handles ckValeurOTCTous.CheckedChanged
        If ckValeurOTCTous.Checked Then
            For Each oAno As Anomalie In m_pulve.lstAnomalie
                oAno.bvaleurOTCOK = True
            Next
            mbs_Annomalies.ResetBindings(False)
            ckValeurOTCTous.Checked = False
        End If
    End Sub

    Private Sub dgv_Annomalies_CellValueChanged(sender As Object, e As DataGridViewCellEventArgs) Handles dgv_Annomalies.CellValueChanged
        '    If e.RowIndex >= 0 AndAlso e.ColumnIndex >= 0 Then
        '        Dim row As DataGridViewRow = dgv_Annomalies.Rows(e.RowIndex)
        '        Dim obj As Anomalie = CType(mbs_Annomalies.Current, Anomalie)

        '        ' Si la cellule modifiée est Propriete1
        '        If dgv_Annomalies.Columns(e.ColumnIndex).DataPropertyName = NameOf(obj.bValeurAgentOK) Then
        '            If CBool(row.Cells(e.ColumnIndex).Value) Then
        '                obj.bvaleurOTCOK = False
        '            End If
        '            ' Si la cellule modifiée est Propriete2
        '        ElseIf dgv_Annomalies.Columns(e.ColumnIndex).DataPropertyName = NameOf(obj.bvaleurOTCOK) Then
        '            If CBool(row.Cells(e.ColumnIndex).Value) Then
        '                obj.bValeurAgentOK = False
        '            End If
        '        End If
        '        '            dgv_Annomalies.InvalidateRow(e.RowIndex)
        '        'mbs_Annomalies.ResetCurrentItem()
        '    End If
    End Sub

    Private Sub dgv_Annomalies_CellContentClick(sender As Object, e As DataGridViewCellEventArgs) Handles dgv_Annomalies.CellContentClick
        dgv_Annomalies.EndEdit()
    End Sub
End Class

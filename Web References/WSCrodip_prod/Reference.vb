'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Ce code source a �t� automatiquement g�n�r� par Microsoft.VSDesigner, Version�1.1.4322.2032.
'
Namespace WSCrodip_prod

    '<remarks/>
    <System.ComponentModel.DesignerCategoryAttribute("code"),
     System.Web.Services.WebServiceBindingAttribute(Name:="CrodipBinding", [Namespace]:="http://www.example.org/crodip/")>
    Public Class CrodipServer
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        '<remarks/>
        Public Sub New()
            MyBase.New()
            Me.Url = "http://admin.crodip.fr/server"
        End Sub
        '''<remarks/>
        <XmlInclude(GetType(AutoTest)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendAutoTest", RequestElementName:="SendAutoTestRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendAutoTest(<System.Xml.Serialization.XmlElementAttribute("arrayItems", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal arrayItems() As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("SendAutoTest", New Object() {arrayItems})
            Return CType(results(0), Integer)
        End Function


        '<remarks/>
        <XmlInclude(GetType(Logs)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendLogs", RequestElementName:="SendLogsRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendLogs(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal Logs As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            'SynchronisationManager.LogSynchroElmt(Logs)
            Dim results() As Object = Me.Invoke("SendLogs", New Object() {Logs})
            Return CType(results(0), Integer)
        End Function


        '<remarks/>
        <XmlInclude(GetType(Agent)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/getAgent", RequestElementName:="GetAgentRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetAgent(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal numeroNational As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef Agent As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetAgent", New Object() {numeroNational})
            Agent = CType(results(1), Object)
            'SynchronisationManager.LogSynchroElmt(Agent)
            Return CType(results(0), Integer)
        End Function


        '<remarks/>
        <XmlInclude(GetType(Agent)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/sendAgent", RequestElementName:="SendAgentRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendAgent(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal AgentRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef Agent As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(AgentRequest)
            Dim results() As Object = Me.Invoke("SendAgent", New Object() {AgentRequest})
            Agent = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function



        '<remarks/>
        <XmlInclude(GetType(Agent)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SetDateSynchroAgent", RequestElementName:="SetDateSynchroAgentRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SetDateSynchroAgent(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal dateDerniereSynchro As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(dateDerniereSynchro)
            Dim results() As Object = Me.Invoke("SetDateSynchroAgent", New Object() {agentId, dateDerniereSynchro})
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(PrestationCategorie)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetPrestationCategorie", RequestElementName:="GetPrestationCategorieRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetPrestationCategorie(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal id As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal idStructure As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef PrestationCategorie As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer

            Dim results() As Object = Me.Invoke("GetPrestationCategorie", New Object() {agentId, id, idStructure})
            PrestationCategorie = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(PrestationCategorie)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(PrestationCategorie)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendPrestationCategorie", RequestElementName:="SendPrestationCategorieRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendPrestationCategorie(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal PrestationCategorieRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef PrestationCategorie As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(PrestationCategorieRequest)
            Dim results() As Object = Me.Invoke("SendPrestationCategorie", New Object() {agentId, PrestationCategorieRequest})
            PrestationCategorie = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(PrestationTarif)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetPrestationTarif", RequestElementName:="GetPrestationTarifRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetPrestationTarif(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal id As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal idStructure As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal idCategorie As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef PrestationTarif As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetPrestationTarif", New Object() {agentId, id, idStructure, idCategorie})
            PrestationTarif = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(PrestationTarif)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(PrestationTarif)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendPrestationTarif", RequestElementName:="SendPrestationTarifRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendPrestationTarif(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal PrestationTarifRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef PrestationTarif As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(PrestationTarifRequest)
            Dim results() As Object = Me.Invoke("SendPrestationTarif", New Object() {agentId, PrestationTarifRequest})
            PrestationTarif = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(Buse)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetBuse", RequestElementName:="GetBuseRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetBuse(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal numeroNational As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef Buse As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetBuse", New Object() {agentId, numeroNational})
            Buse = CType(results(1), Object)
            'SynchronisationManager.LogSynchroElmt(Buse)
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(Buse)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendBuse", RequestElementName:="SendBuseRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendBuse(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal BuseRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef Buse As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(BuseRequest)
            Dim results() As Object = Me.Invoke("SendBuse", New Object() {agentId, BuseRequest})
            Buse = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(ManometreControle)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetManometre", RequestElementName:="GetManometreControleRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetManometreControle(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal numeroNational As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef ManometreControle As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetManometreControle", New Object() {agentId, numeroNational})
            ManometreControle = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(ManometreControle)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(ManometreControle)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendManometre", RequestElementName:="SendManometreControleRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendManometreControle(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ManometreControleRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef ManometreControle As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(ManometreControleRequest)
            Dim results() As Object = Me.Invoke("SendManometreControle", New Object() {agentId, ManometreControleRequest})
            ManometreControle = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(ManometreEtalon)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetManometre", RequestElementName:="GetManometreEtalonRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetManometreEtalon(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal numeroNational As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef ManometreEtalon As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetManometreEtalon", New Object() {agentId, numeroNational})
            ManometreEtalon = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(ManometreEtalon)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(ManometreEtalon)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendManometre", RequestElementName:="SendManometreEtalonRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendManometreEtalon(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ManometreEtalonRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef ManometreEtalon As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(ManometreEtalonRequest)
            Dim results() As Object = Me.Invoke("SendManometreEtalon", New Object() {agentId, ManometreEtalonRequest})
            ManometreEtalon = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function


        '<remarks/>
        <XmlInclude(GetType(Banc)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetBanc", RequestElementName:="GetBancRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetBanc(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal id As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef Banc As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetBanc", New Object() {agentId, id})
            Banc = CType(results(1), Object)
            'SynchronisationManager.LogSynchroElmt(Banc)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(Banc)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendBanc", RequestElementName:="SendBancRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendBanc(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal BancRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef Banc As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(BancRequest)
            Dim results() As Object = Me.Invoke("SendBanc", New Object() {agentId, BancRequest})
            Banc = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(Diagnostic)), XmlInclude(GetType(DiagnosticItem)), XmlInclude(GetType(DiagnosticBuses)), XmlInclude(GetType(DiagnosticBusesDetail)), XmlInclude(GetType(DiagnosticMano542)), XmlInclude(GetType(DiagnosticTroncons833)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetDiagnostic", RequestElementName:="GetDiagnosticRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetDiagnostic(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal id As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef Diagnostic As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetDiagnostic", New Object() {agentId, id})
            Diagnostic = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(Diagnostic)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(Diagnostic)), XmlInclude(GetType(DiagnosticItem)), XmlInclude(GetType(DiagnosticBuses)), XmlInclude(GetType(DiagnosticBusesDetail)), XmlInclude(GetType(DiagnosticMano542)), XmlInclude(GetType(DiagnosticTroncons833)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendDiagnostic", RequestElementName:="SendDiagnosticRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendDiagnostic(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal DiagnosticRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef Diagnostic As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(DiagnosticRequest)
            Dim results() As Object = Me.Invoke("SendDiagnostic", New Object() {agentId, DiagnosticRequest})
            Diagnostic = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(Diagnostic)), XmlInclude(GetType(DiagnosticItem)), XmlInclude(GetType(DiagnosticBuses)), XmlInclude(GetType(DiagnosticBusesDetail)), XmlInclude(GetType(DiagnosticMano542)), XmlInclude(GetType(DiagnosticTroncons833)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetDiagnosticItems", RequestElementName:="GetDiagnosticItemsRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetDiagnosticItems(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal idDiagnostic As String, <System.Xml.Serialization.XmlElementAttribute("DiagnosticItemsList", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef DiagnosticItemsList() As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetDiagnosticItems", New Object() {agentId, idDiagnostic})
            DiagnosticItemsList = CType(results(1), Object())
            SynchronisationManager.LogSynchroElmt(DiagnosticItemsList)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(DiagnosticItem)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendDiagnosticItems", RequestElementName:="SendDiagnosticItemsRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendDiagnosticItems(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute("arrayItems", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal arrayItems() As Object, <System.Xml.Serialization.XmlElementAttribute("DiagnosticItemsList", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef DiagnosticItemsList() As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(arrayItems)
            Dim results() As Object = Me.Invoke("SendDiagnosticItems", New Object() {agentId, arrayItems})
            DiagnosticItemsList = CType(results(1), Object())
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(Diagnostic)), XmlInclude(GetType(DiagnosticItem)), XmlInclude(GetType(DiagnosticBuses)), XmlInclude(GetType(DiagnosticBusesDetail)), XmlInclude(GetType(DiagnosticMano542)), XmlInclude(GetType(DiagnosticTroncons833)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetDiagnosticBuses", RequestElementName:="GetDiagnosticBusesRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetDiagnosticBuses(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal idDiagnostic As String, <System.Xml.Serialization.XmlElementAttribute("DiagnosticBusesList", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef DiagnosticBusesList() As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetDiagnosticBuses", New Object() {agentId, idDiagnostic})
            DiagnosticBusesList = CType(results(1), Object())
            SynchronisationManager.LogSynchroElmt(DiagnosticBusesList)

            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(Diagnostic)),
            XmlInclude(GetType(DiagnosticItem)),
            XmlInclude(GetType(DiagnosticBuses)),
            XmlInclude(GetType(DiagnosticBuses())),
            XmlInclude(GetType(DiagnosticBusesDetail)),
            XmlInclude(GetType(DiagnosticMano542)),
            XmlInclude(GetType(DiagnosticTroncons833)),
            System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendDiagnosticBuses", RequestElementName:="SendDiagnosticBusesRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendDiagnosticBuses(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute("arrayBuses", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal arrayBuses() As Object, <System.Xml.Serialization.XmlElementAttribute("DiagnosticBusesList", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef DiagnosticBusesList() As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(arrayBuses)
            Dim results() As Object = Me.Invoke("SendDiagnosticBuses", New Object() {agentId, arrayBuses})
            DiagnosticBusesList = CType(results(1), Object())
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(Diagnostic)), XmlInclude(GetType(DiagnosticItem)), XmlInclude(GetType(DiagnosticBuses)), XmlInclude(GetType(DiagnosticBusesDetail)), XmlInclude(GetType(DiagnosticMano542)), XmlInclude(GetType(DiagnosticTroncons833)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetDiagnosticBusesDetail", RequestElementName:="GetDiagnosticBusesDetailRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetDiagnosticBusesDetail(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal idDiagnostic As String, <System.Xml.Serialization.XmlElementAttribute("DiagnosticBusesDetailList", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef DiagnosticBusesDetailList() As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetDiagnosticBusesDetail", New Object() {agentId, idDiagnostic})
            DiagnosticBusesDetailList = CType(results(1), Object())
            SynchronisationManager.LogSynchroElmt(DiagnosticBusesDetailList)
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(Diagnostic)),
            XmlInclude(GetType(DiagnosticItem)),
            XmlInclude(GetType(DiagnosticBuses)),
            XmlInclude(GetType(DiagnosticBusesDetail)),
            XmlInclude(GetType(DiagnosticBusesDetail())),
            XmlInclude(GetType(DiagnosticMano542)),
            XmlInclude(GetType(DiagnosticTroncons833)),
            System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendDiagnosticBusesDetail", RequestElementName:="SendDiagnosticBusesDetailRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendDiagnosticBusesDetail(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute("arrayBuses", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal arrayBuses() As Object, <System.Xml.Serialization.XmlElementAttribute("DiagnosticBusesDetailList", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef DiagnosticBusesDetailList() As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(arrayBuses)
            Dim results() As Object = Me.Invoke("SendDiagnosticBusesDetail", New Object() {agentId, arrayBuses})
            DiagnosticBusesDetailList = CType(results(1), Object())
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(Diagnostic)), XmlInclude(GetType(DiagnosticItem)), XmlInclude(GetType(DiagnosticBuses)), XmlInclude(GetType(DiagnosticBusesDetail)), XmlInclude(GetType(DiagnosticMano542)), XmlInclude(GetType(DiagnosticTroncons833)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetDiagnosticMano542", RequestElementName:="GetDiagnosticMano542Request", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetDiagnosticMano542(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal idDiagnostic As String, <System.Xml.Serialization.XmlElementAttribute("DiagnosticMano542List", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef DiagnosticMano542List() As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetDiagnosticMano542", New Object() {agentId, idDiagnostic})
            DiagnosticMano542List = CType(results(1), Object())
            SynchronisationManager.LogSynchroElmt(DiagnosticMano542List)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(Diagnostic)), XmlInclude(GetType(DiagnosticItem)), XmlInclude(GetType(DiagnosticBuses)), XmlInclude(GetType(DiagnosticBusesDetail)), XmlInclude(GetType(DiagnosticMano542)), XmlInclude(GetType(DiagnosticTroncons833)), XmlInclude(GetType(DiagnosticBusesDetail)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendDiagnosticMano542", RequestElementName:="SendDiagnosticMano542Request", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendDiagnosticMano542(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute("arrayMano542", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal arrayMano542() As Object, <System.Xml.Serialization.XmlElementAttribute("DiagnosticMano542List", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef DiagnosticMano542List() As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(arrayMano542)
            Dim results() As Object = Me.Invoke("SendDiagnosticMano542", New Object() {agentId, arrayMano542})
            DiagnosticMano542List = CType(results(1), Object())
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(Diagnostic)), XmlInclude(GetType(DiagnosticItem)), XmlInclude(GetType(DiagnosticBuses)), XmlInclude(GetType(DiagnosticBusesDetail)), XmlInclude(GetType(DiagnosticMano542)), XmlInclude(GetType(DiagnosticTroncons833)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetDiagnosticTroncons833", RequestElementName:="GetDiagnosticTroncons833Request", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetDiagnosticTroncons833(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal idDiagnostic As String, <System.Xml.Serialization.XmlElementAttribute("DiagnosticTroncons833List", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef DiagnosticTroncons833List() As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetDiagnosticTroncons833", New Object() {agentId, idDiagnostic})
            DiagnosticTroncons833List = CType(results(1), Object())
            SynchronisationManager.LogSynchroElmt(DiagnosticTroncons833List)
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(Diagnostic)), XmlInclude(GetType(DiagnosticItem)), XmlInclude(GetType(DiagnosticBuses)), XmlInclude(GetType(DiagnosticBusesDetail)), XmlInclude(GetType(DiagnosticMano542)), XmlInclude(GetType(DiagnosticTroncons833)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendDiagnosticTroncons833", RequestElementName:="SendDiagnosticTroncons833Request", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendDiagnosticTroncons833(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute("arrayTroncons833", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal arrayTroncons833() As Object, <System.Xml.Serialization.XmlElementAttribute("DiagnosticTroncons833List", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef DiagnosticTroncons833List() As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(arrayTroncons833)
            Dim results() As Object = Me.Invoke("SendDiagnosticTroncons833", New Object() {agentId, arrayTroncons833})
            DiagnosticTroncons833List = CType(results(1), Object())
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(Exploitation)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/getExploitation", RequestElementName:="GetExploitationRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetExploitation(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal id As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef Exploitation As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetExploitation", New Object() {agentId, id})
            Exploitation = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(Exploitation)
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(Exploitation)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/sendExploitation", RequestElementName:="SendExploitationRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendExploitation(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ExploitationRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef Exploitation As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(ExploitationRequest)
            Dim results() As Object = Me.Invoke("SendExploitation", New Object() {agentId, ExploitationRequest})
            Exploitation = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(ExploitationTOPulverisateur)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/getExploitationTOPulverisateur", RequestElementName:="GetExploitationTOPulverisateurRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetExploitationTOPulverisateur(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal id As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef ExploitationTOPulverisateur As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetExploitationTOPulverisateur", New Object() {agentId, id})
            ExploitationTOPulverisateur = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(ExploitationTOPulverisateur)
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(ExploitationTOPulverisateur)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/sendExploitationTOPulverisateur", RequestElementName:="SendExploitationTOPulverisateurRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendExploitationTOPulverisateur(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ExploitationTOPulverisateurRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef ExploitationTOPulverisateur As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(ExploitationTOPulverisateurRequest)
            Dim results() As Object = Me.Invoke("SendExploitationTOPulverisateur", New Object() {agentId, ExploitationTOPulverisateurRequest})
            ExploitationTOPulverisateur = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(ControleBanc)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetControleBancMesure", RequestElementName:="GetControleBancMesureRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetControleBancMesure(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal id As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef ControleBancMesure As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetControleBancMesure", New Object() {agentId, id})
            ControleBancMesure = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(ControleBancMesure)
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(ControleBanc)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendControleBancMesure", RequestElementName:="SendControleBancMesureRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendControleBancMesure(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ControleBancMesureRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef ControleBancMesure As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(ControleBancMesure)
            Dim results() As Object = Me.Invoke("SendControleBancMesure", New Object() {agentId, ControleBancMesureRequest})
            ControleBancMesure = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(ControleMano)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetControleManoMesure", RequestElementName:="GetControleManoMesureRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetControleManoMesure(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal id As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef ControleManoMesure As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetControleManoMesure", New Object() {agentId, id})
            ControleManoMesure = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(ControleManoMesure)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(ControleMano)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendControleManoMesure", RequestElementName:="SendControleManoMesureRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendControleManoMesure(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ControleManoMesureRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef ControleManoMesure As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(ControleManoMesureRequest)
            Dim results() As Object = Me.Invoke("SendControleManoMesure", New Object() {agentId, ControleManoMesureRequest})
            ControleManoMesure = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(FVBanc)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetFVBanc", RequestElementName:="GetFVBancRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetFVBanc(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal id As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef FVBanc As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetFVBanc", New Object() {agentId, id})
            FVBanc = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(FVBanc)
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(FVBanc)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendFVBanc", RequestElementName:="SendFVBancRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendFVBanc(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal FVBancRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef FVBanc As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(FVBancRequest)
            Dim results() As Object = Me.Invoke("SendFVBanc", New Object() {agentId, FVBancRequest})
            FVBanc = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(FVManometreControle)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetFVManometreControle", RequestElementName:="GetFVManometreControleRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetFVManometreControle(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal id As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef FVManometreControle As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetFVManometreControle", New Object() {agentId, id})
            FVManometreControle = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(FVManometreControle)
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(FVManometreControle)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendFVManometreControle", RequestElementName:="SendFVManometreControleRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendFVManometreControle(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal FVManometreControleRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef FVManometreControle As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(FVManometreControleRequest)
            Dim results() As Object = Me.Invoke("SendFVManometreControle", New Object() {agentId, FVManometreControleRequest})
            FVManometreControle = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(FVManometreEtalon)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetFVManometreEtalon", RequestElementName:="GetFVManometreEtalonRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetFVManometreEtalon(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal id As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef FVManometreEtalon As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetFVManometreEtalon", New Object() {agentId, id})
            FVManometreEtalon = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(FVManometreEtalon)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(FVManometreEtalon)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendFVManometreEtalon", RequestElementName:="SendFVManometreEtalonRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendFVManometreEtalon(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal FVManometreEtalonRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef FVManometreEtalon As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(FVManometreEtalonRequest)
            Dim results() As Object = Me.Invoke("SendFVManometreEtalon", New Object() {agentId, FVManometreEtalonRequest})
            FVManometreEtalon = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(Pulverisateur)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetPulverisateur", RequestElementName:="GetPulverisateurRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetPulverisateur(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal id As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef Pulverisateur As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            'Me.Invoke("GetPulverisateur", New Object() {agentId, id})
            Dim results() As Object = Me.Invoke("GetPulverisateur", New Object() {agentId, id})
            Pulverisateur = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(Pulverisateur, "GetPulverisateur(" & id & ")")
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(Pulverisateur)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendPulverisateur", RequestElementName:="SendPulverisateurRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendPulverisateur(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal PulverisateurRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef Pulverisateur As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(PulverisateurRequest)
            Dim results() As Object = Me.Invoke("SendPulverisateur", New Object() {agentId, PulverisateurRequest})
            Pulverisateur = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(Structuree)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetStructure", RequestElementName:="GetStructureRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetStructure(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal id As Integer, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef [Structure] As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetStructure", New Object() {agentId, id})
            [Structure] = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt([Structure])
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(Structuree)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendStructure", RequestElementName:="SendStructureRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendStructure(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal StructureRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef [Structure] As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            SynchronisationManager.LogSynchroElmt(StructureRequest)
            Dim results() As Object = Me.Invoke("SendStructure", New Object() {agentId, StructureRequest})
            [Structure] = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(ReferentielManometre)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetReferentielManometre", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetReferentielManometre(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef ReferentielManometre As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetReferentielManometre", New Object() {agentId})
            ReferentielManometre = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(ReferentielManometre)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(ReferentielPulverisateur)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetReferentielPulverisateur", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetReferentielPulverisateur(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef ReferentielPulverisateur As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetReferentielPulverisateur", New Object() {agentId})
            ReferentielPulverisateur = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(ReferentielPulverisateur)
            Return CType(results(0), Integer)
        End Function

        '<remarks> Appel au r�ferentiel TypesCategories</remarks>
        <XmlInclude(GetType(ReferentielPulverisateur)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetReferentielPulverisateurTypesCategories", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetReferentielPulverisateurTypesCategories(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef ReferentielPulverisateur As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetReferentielPulverisateurTypesCategories", New Object() {agentId})
            ReferentielPulverisateur = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(ReferentielPulverisateur)
            Return CType(results(0), Integer)
        End Function
        '<remarks> Appel au r�ferentiel MarquesModeles</remarks>
        <XmlInclude(GetType(ReferentielPulverisateur)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetReferentielPulverisateurMarquesModeles", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetReferentielPulverisateurMarquesModeles(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef ReferentielPulverisateur As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetReferentielPulverisateurMarquesModeles", New Object() {agentId})
            ReferentielPulverisateur = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(ReferentielPulverisateur)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <XmlInclude(GetType(ReferentielTerritoire)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetReferentielTerritoire", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetReferentielTerritoire(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef ReferentielTerritoire As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetReferentielTerritoire", New Object() {agentId})
            ReferentielTerritoire = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(ReferentielTerritoire)
            Return CType(results(0), Integer)
        End Function

        ''<remarks/>
        '<XmlInclude(GetType(ReferentielCodesAPE)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetReferentielCodesAPE", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        'Public Function GetReferentielCodesAPE(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef ReferentielCodesAPE As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
        '    Dim results() As Object = Me.Invoke("GetReferentielCodesAPE", New Object() {agentId})
        '    ReferentielCodesAPE = CType(results(1), Object)
        '    'SynchronisationManager.LogSynchroElmt(ReferentielCodesAPE)
        '    Return CType(results(0), Integer)
        'End Function
        '<remarks/>
        <XmlInclude(GetType(Agent)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetVersionLogicielAgent", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetVersionLogicielAgent(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef VersionLogicielAgent As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetVersionLogicielAgent", New Object(-1) {})
            VersionLogicielAgent = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(VersionLogicielAgent)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetSoftwareUpdate", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetSoftwareUpdate(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal version As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef infos As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetSoftwareUpdate", New Object() {version})
            infos = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(infos)
            Return CType(results(0), Integer)
        End Function

        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetSynchroDateTime", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetSynchroDateTime(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef SynchroDateTime As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("GetSynchroDateTime", New Object(-1) {})
            SynchroDateTime = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(SynchroDateTime)
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetIncrementDiagnostic", RequestElementName:="GetIncrementDiagnosticRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetIncrementDiagnostic(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef result As Integer) As <System.Xml.Serialization.XmlElementAttribute("increment", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Object
            Dim results() As Object = Me.Invoke("GetIncrementDiagnostic", New Object() {agentId})
            result = CType(results(1), Integer)
            SynchronisationManager.LogSynchroElmt(result)
            Return CType(results(0), Object)
        End Function

        '<remarks/>
        <XmlInclude(GetType(Agent)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/UpdatesAvailable", RequestElementName:="UpdatesAvailableRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function UpdatesAvailable(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agent As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal lastUpdateDateTime As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef isUpdateAvailable As Integer, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef isComplete As Integer, <System.Xml.Serialization.XmlElementAttribute("updatesList", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef updatesList() As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer
            Dim results() As Object = Me.Invoke("UpdatesAvailable", New Object() {agent, lastUpdateDateTime})
            isUpdateAvailable = CType(results(1), Integer)
            isComplete = CType(results(2), Integer)
            updatesList = CType(results(3), Object())
            Return CType(results(0), Integer)
        End Function

        Protected Overrides Function GetWebRequest(ByVal uri As Uri) As System.Net.WebRequest
            Dim webRequest As System.Net.WebRequest = MyBase.GetWebRequest(uri)

            Dim rmd As New Random
            webRequest.ConnectionGroupName = rmd.Next(0, 30000)
            'webRequest.KeepAlive = False
            'webRequest.ProtocolVersion = HttpVersion.Version10

            Return webRequest
        End Function
        '<remarks/>
        <XmlInclude(GetType(IdentifiantPulverisateur)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/GetIdentifiantPulverisateur", RequestElementName:="GetIdentifiantPulverisateurRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetIdentifiantPulverisateur(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal id As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef IdentifiantPulverisateur As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer

            Dim results() As Object = Me.Invoke("GetIdentifiantPulverisateur", New Object() {agentId, id})
            IdentifiantPulverisateur = CType(results(1), Object)
            SynchronisationManager.LogSynchroElmt(IdentifiantPulverisateur)
            Return CType(results(0), Integer)
        End Function
        '<remarks/>
        <XmlInclude(GetType(IdentifiantPulverisateur)), System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/crodip/SendIdentifiantPulverisateur", RequestElementName:="SendIdentifiantPulverisateurRequest", RequestNamespace:="http://www.example.org/crodip/", ResponseNamespace:="http://www.example.org/crodip/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function SendIdentifiantPulverisateur(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal agentId As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal IdentifiantPulverisateurRequest As Object, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef IdentifiantPulverisateur As Object) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Integer

            SynchronisationManager.LogSynchroElmt(IdentifiantPulverisateurRequest)
            Dim results() As Object = Me.Invoke("SendIdentifiantPulverisateur", New Object() {agentId, IdentifiantPulverisateurRequest})
            IdentifiantPulverisateur = CType(results(1), Object)
            Return CType(results(0), Integer)
        End Function

    End Class
End Namespace
